<Project ToolsVersion="15.0" Sdk="Microsoft.Docker.Sdk">

  <PropertyGroup Label="Globals">
    <ProjectVersion>2.1</ProjectVersion>
    <DockerTargetOS>Linux</DockerTargetOS>
    <ProjectGuid>336b1fb4-eef8-4e11-bdd5-818983d4e1cd</ProjectGuid>
    <DockerComposeProjectName>healthcare</DockerComposeProjectName>
    <DockerLaunchAction>LaunchBrowser</DockerLaunchAction>
    <DockerServiceUrl>{Scheme}://localhost:{ServicePort}</DockerServiceUrl>
    <DockerServiceName>dicomserver</DockerServiceName>
    <AdditionalComposeFilePaths>docker-compose.https.yml;docker-compose.vs.yml</AdditionalComposeFilePaths>
    <Platforms>x64</Platforms>
  </PropertyGroup>

  <!-- The volume containing the generated certificates varies per OS -->
  <Choose>
    <When Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <PropertyGroup>
        <AdditionalComposeFilePaths>$(AdditionalComposeFilePaths);docker-compose.https.windows.yml</AdditionalComposeFilePaths>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <AdditionalComposeFilePaths>$(AdditionalComposeFilePaths);docker-compose.https.linux.yml</AdditionalComposeFilePaths>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!--
    Note that docker-compose.vs.{debug|release}.yml files are recognized by Visual Studio
    and are automatically included in the docker-compose command. Also note that files above
    the project directory cannot be included as items. See microsoft/DockerTools#336
  -->
  <ItemGroup>
    <None Include="docker-compose.yml" />
    <None Include="docker-compose.*.yml">
      <DependentUpon>docker-compose.yml</DependentUpon>
    </None>
    <None Remove="docker-compose.cast*.yml" />
    <None Include="sql\Dockerfile" />
  </ItemGroup>

</Project>
