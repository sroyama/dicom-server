jobs:
- job: SetupAndRun
  displayName: 'E2E Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .Net Core sdk'
    inputs:
      useGlobalJson: true

  - task: AzurePowerShell@5
    displayName: 'Set Secret Variables'
    inputs:
      azureSubscription: $(azureSubscriptionName)
      azurePowerShellVersion: latestVersion
      ScriptType: inlineScript
      Inline: |
        $secrets = Get-AzKeyVaultSecret -VaultName $(deploymentName)-ts

        foreach($secret in $secrets)
        {
            $environmentVariableName = $secret.Name.Replace("--","_")
            $secretValue = Get-AzKeyVaultSecret -VaultName $(deploymentName)-ts -Name $secret.Name -AsPlainText
            Write-Host "##vso[task.setvariable variable=$environmentVariableName]$secretValue"
        }

  - task: AzurePowerShell@5
    displayName: 'Create Azure Storage SAS Token'
    inputs:
      azureSubscription: $(azureSubscriptionName)
      azurePowerShellVersion: latestVersion
      ScriptType: inlineScript
      Inline: |
        $keys = Get-AzStorageAccountKey -Name '$(azureStorageAccountName)' -ResourceGroupName '$(deploymentName)'
        $primaryKey = $keys[0].Value

        $start = Get-Date
        $end = $start.AddHours(1)
        $cxt = New-AzStorageContext -StorageAccountName '$(azureStorageAccountName)' -StorageAccountKey $primaryKey
        $token = New-AzStorageAccountSASToken -Service Blob -ResourceType Container,Object -Permission 'rwdl' -Start $start -ExpiryTime $end -Context $cxt

        $connectionString = "BlobEndpoint=https://$(azureStorageAccountName).blob.core.windows.net;SharedAccessSignature=$token"
        Write-Host "##vso[task.setvariable variable=Tests__Export__ConnectionString]$connectionString"

  - bash: |
      echo "##vso[task.setvariable variable=testEnvironmentUrl]$(testServerUrl)"
      echo "##vso[task.setvariable variable=Resource]$(testServerUrl)"
      echo "##vso[task.setvariable variable=security_scope]$(testApplicationScope)"
      echo "##vso[task.setvariable variable=security_resource]$(testApplicationResource)"
      echo "##vso[task.setvariable variable=security_enabled]true"

      dotnet dev-certs https
    displayName: 'Setup Authentication'

  - template: ../common/run-e2e-tests.yml

  variables:
    azureStorageAccountName: $[ stageDependencies.DeployTestEnvironment.Provision.outputs['deploy.azureStorageAccountName'] ]
